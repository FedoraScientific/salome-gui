<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Installing SALOME</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=8574>
<meta name=layout-width content=825>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='../default_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../default.css'>");}
//-->
</script>
<style type="text/css">
<!--
h1.whs1 {font-size: 24pt;}
hr.whs2 {float: aligncenter; text-align: justify;}
p.whs3 {text-align: justify;}
h3.whs4 {text-align: justify;}
p.whs5 {text-align: justify; font-style: italic; color: #ff0000;}
p.whs6 {text-align:justify; background-image:url(../texture_horiz_ltbluebubbles.jpg); }
img_whs7 {border-style: none; border: none; width: 36px; height: 38px; float: none;}
p.whs8 {text-align: justify; text-indent: 48px;}
p.whs9 {text-align: justify; margin-left: 40px;}
p.whs10 {text-align: center;}
img_whs11 {border-style: none; width: 638px; height: 404px;}
img_whs12 {border-style: none; width: 481px; height: 117px;}
table.whs13 {width: 100%; float: alignleft; x-border-left: 4px table-solid; x-border-top: 4px table-solid; x-border-right: 4px table-solid; x-border-bottom: 4px table-solid; border-collapse: separate; x-border-left: 4px table-solid; x-border-top: 4px table-solid; x-border-right: 4px table-solid; x-border-bottom: 4px table-solid; border-collapse: separate;}
th.whs14 {background-color: #c0c0c0;}
td.whs15 {background-color: #e4e4e4;}
p.whs16 {font-family: 'Times New Roman', serif; text-align: justify;}
p.whs17 {font-family: 'Times New Roman', serif;}
-->
</style>
<script type="text/javascript" language="JavaScript" title="BSSC Special Effects" src="../ehlpdhtm.js"></script><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("../kernel.html");

		autoSync(0);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	document.location.reload();
//-->
</script>
<h1 class="whs1"><span style="font-size: 24pt;"><font size=6 style="font-size:24pt;">Installing 
 SALOME platform&nbsp; </font></span></h1>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<ul>
	
	<li class=kadov-p><p class="whs3"><a href="#install_from_script">Installing 
 products using install script directly</a></p></li>
	
	<li class=kadov-p><p class="whs3"><a href="#install_from_wizard">Installing 
 products using Installation Wizard</a></p></li>
	
	<li class=kadov-p><p class="whs3"><a href="#check_version_proc">Notes 
 on checking products version procedure</a></p></li>
	
	<li class=kadov-p><p class="whs3"><a href="#pick_up_env">Picking 
 up the environment</a></p></li>
</ul>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<h3 class="whs4"><a NAME=install_from_script></a>Installing 
 products using <tt><font style="color: #ff0000;"
							color=#FF0000>install</font></tt> script directly</h3>

<p class="whs5">To run installation using the install script, 
 type in the command line of a terminal window:</p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">./install 
 [options] &lt;target-directory&gt; [ [ALL] | &lt;product&gt; ... &lt;product&gt; 
 ]</tt> </p>

<p class="whs3">&nbsp;</p>

<p class="whs3">Available options are the following: </p>

<p class="whs3"><tt style="font-family: monospace;">--binaries</tt> 
 is not an obligatory parameter.&nbsp; If you pass this parameter all products 
 will be extracted from the precompiled archives. Otherwise all products 
 will be installed and built from the sources using gnu make procedure. 
 <b><br>
&nbsp;</b></p>

<p class="whs6"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> Take into account that target platform for precompiled binaries 
 is Linux Red Hat 8.0. If you want to install SALOME onto another Linux 
 version, you should use <b><i>sources</i></b> installation mode. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--reinstall</tt> 
 is an optional parameter. Use this parameter if you want to reinstall 
 products you have already installed.</p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--update</tt> 
 is an optional parameter. Pass this parameter to the script if you want 
 your profile to be updated by the installation script. This option is 
 used only when <b>SALOME sources</b> and/or <b>SALOME binaries </b>are 
 installed. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--native</tt> 
 is optional parameter. This option states the way the installation procedure 
 picks up the environment for the products which are not currently installed. 
 When this option is used, the installation script first tries to find 
 and use native products. If necessary products are not found in /usr/bin 
 and /usr/lib directories, script looks for them in the target directory. 
 If the option is not used (default behaviour), the script first inspects 
 the target directory and the system folders. <br>
For more detail information see <a href="#pick_up_env">here.</a> </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--with-mesa</tt> 
 is also optional parameter. This parameter forces linking <b>VTK </b>and 
 <b>Qt</b> with <b>Mesa</b> library and is not taken into account if <b>Mesa 
 </b>library is not installed in the target directory. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--temp 
 </tt>is optional parameter, the directory path must follow it. This directory 
 is used for temporary files. By default script uses <b>/tmp </b>folder. 
 You can change this directory if you doesn't have sufficient amount of 
 disk space in the <b>/tmp</b> folder. <b><br>
&nbsp;</b></p>

<p class="whs6"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> The directory you point should exist and must be an absolute 
 path, otherwise installation script will fail. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">&lt;target-directory&gt;</tt> 
 is the only obligatory parameter and should be an absolute path. This 
 will be the root directory for installing products. </p>

<p class="whs3">&nbsp;</p>

<p class="whs6"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> This directory should exist. <tt>&lt;target-directory&gt;</tt> 
 and temp directory must not coincide to avoid collisions. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">&lt;product&gt; 
 ... &lt;product&gt;</tt> are the symbolic names of the installing products. 
 <br>
Prerequisite products are <b>gcc tcl cas python numeric swig mesa qt qwt 
 sip pyqt hdf med omni vtk salomebin salomesources salomedoc</b> <br>
Additional bonus products are <b>doxygen graphviz happydoc</b> </p>

<p class="whs3">You can also use <tt>ALL</tt> parameter 
 to install all supplied products at once. </p>

<p class="whs3">&nbsp;</p>

<p class="whs6"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> If you want to use native products do not add them into the 
 script parameters. You should also use <tt>--native</tt> option in this 
 case. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3"><tt style="font-family: monospace;">--help</tt> 
 or <tt>-h</tt> key will print this information. </p>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<h3 class="whs4"><a NAME=install_from_wizard></a>Installing 
 products using <font style="color: #ff0000;"
						color=#FF0000>Installation Wizard</font></h3>

<p class="whs8">Actually you can install 
 all necessary products with help of the install script. But it's not convenient 
 because you have to enter in the command line all parameters used by this 
 script in a strictly definite order. You are strongly recommended to use 
 Installation Wizard program. It represents a GUI superstructure over the 
 shell script. It helps you to install all products needed for SALOME platform, 
 avoiding the problem with parameters' order. </p>

<p class="whs8">&nbsp;</p>

<p class="whs5">To run Installation Wizard, type in the command 
 line of the terminal</p>

<p class="whs3">&nbsp;</p>

<p class="whs9">&nbsp;<b>./runInstall.csh</b>. 
 </p>

<p class="whs3">&nbsp;</p>

<p class="whs8">This software was built 
 with help of <b><i>Qt</i></b>. The wizard contains several pages. To navigate 
 between pages use <i>&quot;Next&quot;</i> and <i>&quot;Back&quot;</i> 
 buttons in the lower part of the wizard window. <i>&quot;Cancel&quot;</i> 
 button closes dialog window and quits the installation procedure. To invoke 
 this help information click <i>&quot;Help&quot;</i> button. </p>

<p class="whs3">Skip the first <i>&quot;<span style="font-weight: bold;"><B>Introduction</B></span>&quot;</i> 
 page by pressing <i>&quot;<span style="font-weight: bold;"><B>Next</B></span>&quot;</i> 
 button. In the second page you have the possibility to select products 
 for installation (see <a href="#ProductPage">Fig.1</a> ). Each product 
 has several options of installation - it can be installed as precompiled 
 binaries, as sources or not installed at all. You can mark the products, 
 you want to install, by clicking the corresponding radiobuttons and checkboxes 
 in the list view in the left part of the page. Note that some products 
 can be installed only together with other products (or these products 
 should be already installed on your machine). So the installation procedure 
 has a special feature to automatically mark these products in the list 
 view. For example, in order to install <b><i>pyqt</i></b> it's necessary 
 to have <b><i>gcc, python</i></b>,<b><i> qt</i></b> and <b><i>sip</i></b> 
 installed. Therefore all these products will be marked when you check 
 on <b><i>pyqt</i></b>. This feature can be switched off by clicking <i>&quot;<span 
 style="font-weight: bold;"><B>Auto set prerequisites products</B></span>&quot;</i> 
 checkbox. <br>
There are three special buttons in the right part of the page. If you want 
 to install all products as sources just click <i>&quot;<span style="font-weight: bold;"><B>Select 
 Sources</B></span>&quot;</i> button. This will also mark <b><i>SALOME docs</i></b>, 
 <b><i>SALOME sources</i></b> and <b><i>SALOME binaries</i></b> items. 
 You can mark all products (except <b><i>gcc</i></b> and <b><i>swig</i></b>, 
 see below) as binaries by clicking <i>&quot;<span style="font-weight: bold;"><B>Select 
 Binaries (recommended)</B></span>&quot;</i> button. This will mark <b><i>SALOME 
 docs</i></b>, <b><i>SALOME sources</i></b> and <b><i>SALOME binaries</i></b> 
 items too. <i>&quot;<span style="font-weight: bold;"><B>Unselect All</B></span>&quot;</i> 
 resets all products to <i>&quot;not install&quot;</i> state. </p>

<p class="whs3">&nbsp;</p>

<p align="center" class="whs10"><img src="../productpage.png" width="638px" height="404px" border="0" class="img_whs11"> <br>
<a NAME=ProductPage></a><b>Figure 1:</b> &quot;Products to install&quot; 
 page </p>

<p align="center" class="whs10">&nbsp;</p>

<p class="whs3">The <i>&quot;<span style="font-weight: bold;"><B>Total 
 disk space required:</B></span>&quot;</i> field displays how much disk space 
 on the hard drive is required for installation of selected products. <br>
Installation procedure uses a special directory for storing temporary files. 
 The <i>&quot;<span style="font-weight: bold;"><B>Space for temporary files:</B></span>&quot;</i> 
 field shows the information about required disk space on the hard drive 
 for extracting and compiling of the selected products. </p>

&nbsp; 

<p class="whs6"><b 
 style="font-weight: bold;"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> </b>Please, take into account 
 that displayed amount of required disk space is approximate and may differ 
 when you install products on your hard drive. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3">&nbsp;</p>

<p class="whs6"><b 
 style="font-weight: bold;"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"> </b>Not all products can be installed 
 as precompiled binaries. <b><i>gcc</i></b> and <b><i>swig</i></b> must 
 be installed as sources and then compiled. Therefore when you try to install 
 all products as binaries by clicking <i>&quot;Select Binaries (recommended)&quot;</i> 
 button these two items will be marked as sources and you will get the 
 following <a href="#CantInstall">warning message box</a> </p>

<p align="center" class="whs10">&nbsp;</p>

<p align="center" class="whs10"><img src="../cantinstall.png" width="481px" height="117px" border="0" class="img_whs12"> <br>
<a NAME=CantInstall></a><b>Figure 2:</b> <b><i>gcc</i></b> and <b><i>swig</i></b> 
 warning message box </p>

<p align="center" class="whs10">&nbsp;</p>

<p class="whs6"><b 
 style="font-weight: bold;"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7"></b> Installation procedure has 
 the limitation concerning<b> </b>gcc 3.2 installation procedure. The known 
 bug of the gcc3.2 is impossibility to build it on the computer where gcc3.2 
 is already installed. In this case build procedure fails. </p>

<p class="whs3">&nbsp;</p>

<p class="whs3">To proceed installation click <i>&quot;<span 
 style="font-weight: bold;"><B>Next</B></span>&quot;</i> button. </p>

<p class="whs3">In the second page you are proposed to 
 enter the target directory where all selected products will be installed 
 to (see <a href="#DirPage">Fig.3</a> ). You can also press <i>&quot;<span 
 style="font-weight: bold;"><B>Browse</B></span>...&quot;</i> button and choose 
 the folder for installation using standard <b><i>Qt</i></b> browse directory 
 dialog box. </p>

<p class="whs3">As it was mentioned before, the shell script 
 uses a special directory for storing all temporary files. The <b>/tmp</b> 
 folder is used by default. You can change this default behaviour - just 
 type any folder or use the corresponding <i>&quot;<span style="font-weight: bold;"><B>Browse...</B></span>&quot;</i> 
 button. <b><br>
&nbsp;</b></p>

<p class="whs3">The temporary folder field is disabled 
 when you are installing only binaries. </p>

<p class="whs3">&nbsp;</p>

<p align="center" class="whs10"><img src="../dirpage.png" width="638px" height="404px" border="0" class="img_whs11"> <br>
<a NAME=DirPage></a><b>Figure 3:</b> &quot;Installation settings&quot; 
 page </p>

<p class="whs3">&nbsp;</p>

<p class="whs8">If the directory you 
 want to install products does not exist you will be prompted by message 
 box to confirm this directory creation. If you type wrong directory path, 
 or if you have no permission for the directory you use the corresponding 
 message box will raise. <br>
The installation procedure also checks available disk space on the selected 
 directories according to the products selected. If there is no enough 
 disk space on your hard drive you will also see the corresponding error 
 message box. </p>

<p class="whs8">Unfortunately, the configure 
 procedure has a very annoying bug under Linux platform. The directory 
 should be obligatory entered without spaces. For example, the configure 
 procedure for <b><i>gcc</i></b> won't work if you pass the following parameter: 
 <i>--prefix=&quot;/New Folder 1&quot;</i>. <b>Therefore you are strongly 
 recommended not to use directory names containing spaces.</b> </p>

<p class="whs3">In case if you have some products already 
 installed on your machine it will be very convenient not to install these 
 products again, because repeated compiling can take a lot of time. We 
 have added checking of installed products in the installation shell script 
 in order to decrease time for installing of products. But it can lead 
 to some troubles. For example, the shell script can successfully check 
 <b><i>Qt</i></b> (check <b>QTDIR</b> and find libqt-mt.so.3.0.5) but some 
 files can be corrupted or non-existent (e.g. some header files have been 
 accidentally removed ). For such cases in the shell script there is a 
 possibility to reinstall these corrupted products. For that purpose you 
 have to check <i>&quot;<span style="font-weight: bold;"><B>Reinstall products 
 you have already installed (recommended)?</B></span>&quot;</i> option on this 
 page. You are recommended to use <i>&quot;<span style="font-weight: bold;"><B>No</B></span>&quot;</i> 
 switch only if this Installation Wizard program has been used before. 
 </p>

<p class="whs3">For more detailed information about checking 
 products version procedure see <a href="#check_version_proc">here</a>. 
 </p>

<p class="whs8"><a name=profile></a>The 
 shell script creates special files: <b>.salomecsh</b> and <b>.salomesh</b> 
 in the <b><i>SALOME sources</i></b> and <b><i>SALOME binaries</i></b> 
 root directories. You have a possibility to add one of them into your 
 profile. Just check <i>&quot;<span style="font-weight: bold;"><B>Do you want 
 to update your profile?</B></span>&quot; </i>option&nbsp; In this case your 
 environment will always point to the newly installed products. </p>

<p class="whs8">Check <i>&quot;<span 
 style="font-weight: bold;"><B>Use Mesa library</B></span>&quot;</i> option if 
 you want to install/build Vtk and Qt (OpenGL support) to be linked to 
 preinstalled Mesa library. You should have Mesa drivers installed on the 
 target directory or somewhere else, but in the last case you have to set 
 MESA_HOME environment variable. Or you should choose Mesa 3.4.2 product 
 to be installed also. Otherwise Vtk/Qt without Mesa support will be installed. 
 </p>

<p class="whs8">If you want to use native 
 Linus Red Hat 8.0 products (these are gcc, tcl, Python, Qt, Sip and PyQt) 
 do not mark these products in the <i>&quot;<span style="font-weight: bold;"><B>Products 
 to install</B></span>&quot;</i> page and check <i>&quot;<span style="font-weight: bold;"><B>Prefer 
 native products</B></span>&quot; </i>option. See <a href="#pick_up_env">Pick 
 up the environment</a> section for more detail information. </p>

<p class="whs3">To proceed further click <i>&quot;<span 
 style="font-weight: bold;"><B>Next</B></span>&quot;</i> button (see <a href="#ChoicePage">Fig.4</a>). 
 </p>

<p class="whs3">&nbsp;</p>

<p align="center" class="whs10"><img src="../choicepage.png" width="638px" height="404px" border="0" class="img_whs11"> <br>
<a NAME=ChoicePage></a><b>Figure 4:</b> &quot;Check your choice&quot; page 
 </p>

<p align="center" class="whs10">&nbsp;</p>

<p class="whs3">This page summarizes the installation settings 
 you've made on the previous pages. You can check again the settings and 
 change them if necessary. <br>
When you are sure that everything is OK, press <i>&quot;<span style="font-weight: bold;"><B>Next</B></span>&quot;</i> 
 button to follow to the <a href="#ProgressPage">next page</a>. </p>

<p class="whs3">&nbsp;</p>

<p align="center" class="whs10"><img src="../progresspage.png" width="638px" height="404px" border="0" class="img_whs11"> <br>
<a NAME=ProgressPage></a><b>Figure 5:</b> &quot;Installation progress&quot; 
 page </p>

<p class="whs3">&nbsp;</p>

<p class="whs3">To start installation of the selected products 
 click <i>&quot;<span style="font-weight: bold;"><B>Start</B></span>&quot;</i> 
 button. It launches the shell installation script and you will be able 
 to see the output of the script in the topmost dialog's frame. In case 
 of any installation problems (for example, you have accidentally removed 
 the temporary directory) the script will ask you: <i>&quot;<span style="font-weight: bold;"><B>Would 
 you like to continue : (Y,N) ?</B></span>&quot;</i>. You can answer this question 
 by typing [Y] or [N] in the middle text edit control frame. <b><span style="font-weight: normal;"><br>
P</span></b>ress [Enter] when you finish typing data. </p>

<p class="whs3">The <i>&quot;<span style="font-weight: bold;"><B>Installation 
 Status</B></span>&quot;</i> frame window shows you the progress of installation. 
 It contains a list of all selected products with brief descriptions. &quot;<font 
 style="color: #ff0000;"
	color=#FF0000>Waiting</font>&quot; description means that installation 
 of this product have not started yet. Currently installing product is 
 marked as &quot;<font style="color: #FF9900;"
						color=#FF9900>Processing</font>&quot;. All installed 
 products have &quot;<font style="color: #33FF33;"
							color=#33FF33>Completed</font>&quot; description. 
 </p>

<p class="whs3">You can abort installation and close the 
 installation procedure using <i>&quot;Cancel&quot;</i> button. It sends 
 the signal &quot;SIGTERM&quot; to the shell script. The script has a signal 
 handler and will try to clear all temporary files. The process of removing 
 temporary files can take some time, so the installation wizard will wait 
 3 seconds before closing. </p>

<p class="whs3">At the end of installation (all selected 
 products have been installed successfully) you can go back to the previous 
 pages to start a new installation or click <i>&quot;Finish&quot;</i> button 
 to close the installation wizard. </p>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<h3 class="whs4"><a NAME=check_version_proc></a>Notes on<font 
 style="color: #ff0000;"
	color=#FF0000> checking products version</font> procedure</h3>

<p>Unfortunately under Linux platform there is no exact algorithm to identify 
 the product's version. The table below contains the information relating 
 to checking preinstalled products. <br>
&nbsp; </p>

<!--(Table)=========================================================-->
<div align=left><table NOSAVE x-use-null-cells width="100%" border="4" class="whs13">

<tr NOSAVE>
<th NOSAVE bgcolor="#C0C0C0" class="whs14"><font style="font-size: medium;"
							size=4>Product</font> </th>
<th NOSAVE bgcolor="#C0C0C0" class="whs14"><font style="font-size: medium;"
							size=4>Algorithm of checking</font> </th>
<th NOSAVE bgcolor="#C0C0C0" class="whs14"><font style="font-size: medium;"
							size=4>Preliminary steps before launching</font> 
 <font style="font-size: medium;"
		size=4><br>
of installation procedure</font> </th>
<th NOSAVE bgcolor="#C0C0C0" class="whs14"><font style="font-size: medium;"
							size=4>Notes</font> </th></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">gcc 3.2</td>
<td>ver=`/usr/bin/gcc --version | grep 'gcc (GCC) .*' | cut -b 11-13`</td>
<td>- </td>
<td>ver should be equal 3.2 <br>
It is recommended to use native gcc on Linux RedHat 8.0</td></tr>

<tr NOSAVE>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">tcl 8.3</td>
<td NOSAVE>existence of TCLHOME <br>
existence of tclsh8.3 <br>
existence of wish8.3 <br>
existence of libtcl8.3.so <br>
existence of libtk8.3.so <br>
existence of libtclx8.3.so <br>
existence of libtkx8.3.so</td>
<td>set TCLHOME if you have preinstalled version of tcl. <br>
set LD_LIBRARY_PATH on a directory where libs can be found.</td>
<td>It is recommended to use native tcl on Linux RedHat 8.0</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Cascade 4.0</td>
<td>existence of CASROOT environment variable</td>
<td>set CASROOT if you have preinstalled version of CASCADE</td>
<td>Unfortunately we can't say anything exactly about CASCADE 4.0 and we 
 only check CASROOT environment variable. If you have problem with preinstalled 
 version of CASCADE reinstall it</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Python 2.2.1</td>
<td>existense of PYTHONHOME <br>
isPython=`which python` <br>
ver=`python -V`</td>
<td>set PYTHONHOME to root Python folder <br>
set PATH on a directory where python can be found</td>
<td>Python should exist and ver should be equal to 2.2.1 <br>
It is recommended to use native Python on Linux RedHat 8.0</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Mesa 3.4.2</td>
<td>existence of libGL.so.1.2.030402</td>
<td>set LD_LIBRARY_PATH on a directory where libGL.so.1.2.030402 can be 
 found</td>
<td>You have a possibility to build products (vtk &amp; qt) with Mesa drivers 
 from the package supplied with this installation procedure or to use OpenGL 
 drivers installed on your computer locally. This check procedure concerns 
 only supplied Mesa driver.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Swig 1.3.17</td>
<td>isSwig=`which swig` <br>
ver=`swig -version` <br>
ver=`echo $ver | awk '{print $3}'`</td>
<td>set PATH on a directory where swig can be found</td>
<td>Swig should exist and ver should be equal to 1.3.17</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Qt 3.0.5</td>
<td>existence of QTDIR <br>
existence of libqt-mt.so.3.0.5</td>
<td>set QTDIR if you have preinstalled version of qt</td>
<td>We try to find libqt-mt.so.3.0.5 in ${QTDIR}/lib folder. <br>
You should set MESA_HOME only if you have preinstalled version of Mesa 
 3.4.2. <br>
It is recommended to use native Qt on Linux RedHat 8.0</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Qwt 0.4.1</td>
<td>existence of QWTHOME <br>
existence of libqwt.so.0.4.1</td>
<td>set&nbsp; QWTHOME if you have preinstalled version of qwt</td>
<td>We try to find libqwt.so.0.4.1 in the ${QWTHOME}/lib folder.&nbsp;</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Hdf 5-1.4.4</td>
<td>existence of HDF5HOME <br>
existence of libhdf5.so.0.0.0 <br>
existence of libhdf5.settings</td>
<td>set HDF5HOME if you have preinstalled version of hdf</td>
<td>We try to find libhdf5.so.0.0.0 and libhdf5.settings in ${HDF5HOME}/lib 
 folder. <br>
File libhdf5.settings should contain the following entry: <br>
HDF5 Version: 1.4.4</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Med 2.1.6</td>
<td>existence of MED2HOME <br>
existence of libmed.so.0.0.0</td>
<td>set MED2HOME if you have preinstalled version of med</td>
<td>Unfortunately we can't check version number. <br>
We try to find libmed.so.0.0.0 in ${MED2HOME}/lib folder. <br>
If you have problem with preinstalled version of med reinstall it.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Vtk 4.2</td>
<td>existence of VTKHOME <br>
existence of libvtkCommon.so</td>
<td>set VTKHOME if you have preinstalled version of vtk</td>
<td>Unfortunately we can't check the version number. <br>
We try to find libvtkCommon.so in ${VTKHOME}/lib/vtk folder. <br>
If you have problem with preinstalled version of vtk reinstall it.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">OmniORB 3.0.5, <br>
OmniORBpy 1.5, <br>
OmniNotify 1.2</td>
<td>existence of OMNIORBDIR <br>
existence of libomniORB3.so.0.5 <br>
existence of _omnipymodule.so.0.5 <br>
existence of libCOSNotify3.so.0.5 <br>
existence of notifd <br>
existence of THIS_IS_omniORB_3_0_5 <br>
existence of THIS_IS_omniNotify_1_2 <br>
existence of THIS_IS_OMNIORBPY_1_5</td>
<td>set OMNIORBDIR if you have preinstalled version of omni</td>
<td>We try to find libomniORB3.so.0.5, _omnipymodule.so.0.5 and libCOSNotify3.so.0.5 
 in ${OMNIORBDIR}/lib/i586_linux_2.0_glibc2.1 folder. <br>
We try to find notifd in ${OMNIORBDIR}/bin/i586_linux_2.0_glibc2.1 folder. 
 <br>
Additional checking - omni add special files THIS_IS_... <br>
We try to find THIS_IS_omniORB_3_0_5 in ${OMNIORBDIR} folder. <br>
We try to find THIS_IS_omniNotify_1_2 in ${OMNIORBDIR}/src/services/omniNotify. 
 <br>
We try to find THIS_IS_OMNIORBPY_1_5 in ${OMNIORBDIR}/src/lib/omniORBpy 
 folder.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Numeric 22.0</td>
<td>existence of Numeric folder <br>
existence of _numpy.so</td>
<td>set PYTHONHOME if you have preinstalled version of python</td>
<td>Unfortunately we can't check the version number. <br>
We try to find Numeric folder in ${PYTHONHOME}/lib/python2.2/site-packages/Numeric 
 folder. <br>
If you have problem with preinstalled version of numeric 22.0 reinstall 
 it.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Sip 3.3.2</td>
<td>existence of SIPDIR <br>
existence of sip <br>
existence of libsip.so.9.1.0</td>
<td>set SIPDIR to directory where you have sip preinstalled</td>
<td>We try to find sip and libsip.so.9.1.0 in $SIPDIR folder if you set 
 SIPDIR , otherwise searching is done using $PATH and $LD_LIBRARY_PATH 
 accordingly. <br>
It is recommended to use native Sip on Linux RedHat 8.0</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">PyQt 3.3.2</td>
<td>existence of PYQTDIR <br>
existence of libqtxmlcmodule.so.1.0.0</td>
<td>set PYQTDIR to directory where you have sip preinstalled</td>
<td>Unfortunately we can't check the version number. <br>
We try to find libqtxmlcmodule.so.1.0.0 in $PYQTDIR folder if you set PYQTDIR, 
 otherwise searching is done using $LD_LIBRARY_PATH . <br>
If you have problem with preinstalled version of PyQt 3.3.2 reinstall it. 
 <br>
It is recommended to use native PyQt on Linux RedHat 8.0</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">HappyDoc 2.1</td>
<td>existence of happydoc <br>
ver=`happydoc | grep &quot;HappyDoc version 2.1&quot;`</td>
<td>set PYTHONHOME if you have preinstalled version of python</td>
<td>We try to find happydoc in $PYTHONHOME/bin folder. <br>
ver should not be empty. <br>
This product is not obligatory. It was added only for your comfort.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Doxygen 1.3-rc2</td>
<td>existence of doxygen <br>
existence of doxysearch <br>
existence of doxytag <br>
existence of doxywizard</td>
<td>set QTDIR if you have preinstalled version of qt <br>
set PATH on a directory where doxygen, doxysearch, doxytag and doxywizard 
 can be found</td>
<td>Unfortunately we can't check the version number. <br>
It's necessary to have compiled Qt in order to build doxywizard. <br>
If you have problem with preinstalled version of doxygen 1.3-rc2 reinstall 
 it. <br>
This product is not obligatory. It was added only for your comfort.</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">Graphviz 1.9</td>
<td>existance of dot</td>
<td>add GraphViz's bin directory to the PATH environment variable</td>
<td>Unfortunately we can't check the version number. <br>
We try to find dot program in the $PATH</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">SALOME binaries</td>
<td>existence of SALOME_ROOT_DIR <br>
existence of VERSION file <br>
ver=`cat $SALOME_ROOT_DIR/bin/VERSION | awk -F: '{print $2}' | tr -d '[:space:]'`</td>
<td>set SALOME_ROOT_DIR if you have preinstalled binaries of SALOME version 
 1.2</td>
<td>SALOME binaries should exist and ver should be equal to 1.2</td></tr>

<tr>
<td bgcolor="#E4E4E4" class="whs15">
<p class="whs3">SALOME sources</td>
<td>existence of SALOMEPRO_SRC <br>
existence of VERSION file <br>
ver=`cat $SALOMEPRO_SRC/bin/VERSION | awk -F: '{print $2}' | tr -d '[:space:]'`</td>
<td>set SALOMEPRO_SRC if you have preinstalled sources of SALOME version 
 1.2</td>
<td>SALOME sources should exist and ver should be equal to 1.2</td></tr>
</table>
</div><p class="whs3">&nbsp;</p>

<p class="whs6"><img src="../note1.gif" x-maintain-ratio="TRUE" width="36px" height="38px" border="0" class="img_whs7">: For native products installation procedure sets proper environment 
 variables itself, and you do not need to set such variables like, e.g. 
 <b>TCLHOME</b> or <b>PYTHONHOME</b>. But if you have native products installed 
 to different from default directories (not <b>/usr/bin</b>, <b>/usr/lib</b>), 
 it is recommended to follow above description. </p>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<h3 class="whs4"><a NAME=pick_up_env></a>Picking up the 
 <font style="color: #ff0000;"
		color=#FF0000>environment</font></h3>

<p class="whs8">Please, read carefully 
 the following information. This section describes how the installation 
 procedure collects environment. </p>

<p class="whs8">After installing each 
 product shell script creates in the product root folder special environment 
 file with the name of the product but beginning from the dot, which includes 
 all necessary product settings. For example for VTK-4.2 the file is<b> 
 .VTK-4.2</b>. These files allows to pick up all environment settings which 
 are necessary to build and launch SALOME. When you install SALOME sources 
 and/or binaries, installation procedure looks through the target directory 
 to pick up all the settings files and creates two scripts: <b>.salomesh</b> 
 and <b>.salomecsh </b>for sh and csh correspondingly. Such approach helps 
 to save time when reinstalling products and you may not to care about 
 setting all environment variables manually. What you need is just to use 
 one of these scripts. You even may not to add this script in your profile. 
 Installation Wizard will do it for you if corresponding option is enabled 
 (<i>&quot;Do you want to update your profile?&quot;</i> check box for 
 Install Wizard and <tt>--update</tt> option for the script). </p>

<p class="whs3">It also concerns those products, which 
 are not currently installed. For example, you install some SALOME binaries 
 to the directory where you have previously installed other products.&nbsp; 
 Installation procedure still tries to collect environment files from the 
 target directory if it finds the necessary products there. If some product 
 is not found in the target directory the corresponding section of .salomesh/.salomecsh 
 files will be skipped.&nbsp; However for native products (<b><i>gcc, tcl, 
 python, qt, sip, pyqt)</i></b> instal script also tries to find them in 
 the system directories. The corresponding section of <b>.salome*</b> files 
 will contain special description, for example <i>&quot;#------ native 
 gcc is used ------&quot;</i>. </p>

<p class="whs3">You should take into account such behaviour 
 of the installation procedure. Install script doesn't know itself which 
 version of the product you want to use - native or preinstalled. You have 
 possibility to change the order of searching the products by using special 
 key: <i>&quot;Prefer native products&quot;</i> option for Wizard and <tt>--native</tt> 
 key for the install script. In this case installation procedure will try 
 to find products FIRST in your system folders and THEN in the target directory. 
 </p>

<p class="whs3">Please, again bear in mind that described 
 above concerns only those products WHICH&nbsp;ARE&nbsp;NOT CURRENTLY INSTALLED. 
 </p>

<p class="whs3">In any case you may edit <b>.salome*</b> 
 files after installation procedure finishes. </p>


<!--(HR)============================================================-->
<hr align="center" class="whs2">


<p class="whs3">&nbsp;</p>

<p class="whs3">&nbsp; </p>

<p>&nbsp;</p>

<p class="whs16">
<a href="javascript:void(0);" onClick="var e; if (parseInt(navigator.appVersion)>=4){e=event;}  if (parseInt(navigator.appVersion) >=2 && typeof(PopupMenu_Invoke) == 'function') PopupMenu_Invoke(e,'','About SALOME PRO architecture','about_salome_pro_architecture.htm','Introduction to SALOME PRO','introduction_to_salome_pro.htm','Running SALOME PRO','running_salome_pro.htm');return false;" title="Related Topics"><img src="../ss_btn_related_topics.gif" border=0 height=17 width=82 alt="Related Topics"></a></p>

<p class="whs16">&nbsp;</p>

<p class="whs16">&nbsp;</p>

<p class="whs16">&nbsp;</p>

<p class="whs16">&nbsp;</p>

<p class="whs17">&nbsp;</p>

<script type="text/javascript" language="JavaScript" title="WebHelpRelatedTopics"><!--
if (parseInt(navigator.appVersion) >= 3 && typeof (WritePopupMenuLayer) == "function")
  WritePopupMenuLayer();
//--></script><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
