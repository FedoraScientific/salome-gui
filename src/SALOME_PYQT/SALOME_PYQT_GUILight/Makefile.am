# Copyright (C) 2007-2013  CEA/DEN, EDF R&D, OPEN CASCADE
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

#  File   : Makefile.am
#  Author : Roman NIKOLAEV Open CASCADE S.A.S. (roman.nikolaev@opencascade.com)
#
include $(top_srcdir)/adm_local/unix/make_common_starter.am

# Library target
lib_LTLIBRARIES = libSalomePyQtGUILight.la


# extra source files (generated by sip)
SIP_SRC   = sipAPISalomePyQtGUILight.h       \
            sipSalomePyQtGUILightcmodule.cc

# Sip definition file
SIP_FILES = SALOME_PYQT_GUILight.sip

# extra dist files
EXTRA_DIST += $(SIP_FILES)


# extra clean files
CLEANFILES = $(SIP_SRC)

# moc files (generated my moc)
MOC_FILES = \
	SALOME_PYQT_PyModule_moc.cxx \
	SALOME_PYQT_ModuleLight_moc.cxx \
	SALOME_PYQT_DataModelLight_moc.cxx

# exported header files
salomeinclude_HEADERS =	\
	SALOME_PYQT_GUILight.h \
	SALOME_PYQT_ModuleLight.h \
	SALOME_PYQT_DataObjectLight.h \
	SALOME_PYQT_DataModelLight.h \
	SALOME_PYQT_PyInterp.h

# library sources
dist_libSalomePyQtGUILight_la_SOURCES = \
	SALOME_PYQT_PyModule.h \
	SALOME_PYQT_PyModule.cxx \
	SALOME_PYQT_ModuleLight.cxx \
	SALOME_PYQT_DataObjectLight.cxx \
	SALOME_PYQT_DataModelLight.cxx  \
	SALOME_PYQT_PyInterp.cxx

nodist_libSalomePyQtGUILight_la_SOURCES = $(MOC_FILES) $(SIP_SRC)


libSalomePyQtGUILight_la_CPPFLAGS =  $(QT_INCLUDES) $(SIP_INCLUDES) $(PYTHON_INCLUDES)	\
	$(CAS_CPPFLAGS) $(VTK_INCLUDES) $(OGL_INCLUDES) $(BOOST_CPPFLAGS)		\
	-DHAVE_CONFIG_H @KERNEL_CXXFLAGS@ -DCALL_OLD_METHODS				\
	-I. -I$(srcdir)/../../PyInterp -I$(srcdir)/../../PyConsole		\
	-I$(srcdir)/../../SUIT -I$(srcdir)/../../Qtx -I$(srcdir)/../../LightApp		\
	-I$(srcdir)/../../Plot2d -I$(srcdir)/../../OCCViewer				\
	-I$(srcdir)/../../CAM -I$(srcdir)/../../STD		                        \
	-I$(srcdir)/../../SUITApp                                                       \
	-I$(srcdir)/../../CAM -I$(srcdir)/../../STD -I$(srcdir)/../../Event

if GUI_ENABLE_CORBA
libSalomePyQtGUILight_la_CPPFLAGS += -I$(srcdir)/../../SalomeApp \
				     @CORBA_CXXFLAGS@ @CORBA_INCLUDES@
endif


if !GUI_ENABLE_CORBA
  libSalomePyQtGUILight_la_CPPFLAGS += -DGUI_DISABLE_CORBA
endif

# linkage flags
libSalomePyQtGUILight_la_LIBADD = $(PYTHON_LIBS) $(SIP_LIBS) $(PYQT_LIBS) $(VTK_LIBS)  \
                                  $(OGL_LIBS) ../../PyInterp/libPyInterp.la ../../LightApp/libLightApp.la

if GUI_ENABLE_CORBA
  libSalomePyQtGUILight_la_LIBADD +=../../SalomeApp/libSalomeApp.la $(KERNEL_LDFLAGS) -lSalomeContainer
endif



# Custom build step: generate C++ wrapping according to $(SIP_FILES)
$(SIP_SRC): $(SIP_FILES)
	$(SIP) $(PYQT_SIPFLAGS) $<

# extra dependency (SALOME_PYQT_Module.cxx depends on header files generated by sip)
$(dist_libSalomePyQtGUILight_la_SOURCES): $(SIP_SRC)

