#
#  PLEASE DO NOT MODIFY configure.in FILE
#
#  ALL CHANGES WILL BE DISCARDED BY THE NEXT
#  build_configure COMMAND
#
#  CHANGES MUST BE MADE IN configure.in.base FILE
#
#
# Author : Marc Tajchman (CEA)
# Date : 28/06/2001
# Modified by : Patrick GOLDBRONN (CEA)
# Modified by : Marc Tajchman (CEA)
#
# Created from configure.in.base
#


AC_INIT(src)
AC_CONFIG_AUX_DIR(${KERNEL_ROOT_DIR}/salome_adm/unix/config_files)
AC_CANONICAL_HOST

PACKAGE=salome
AC_SUBST(PACKAGE)

VERSION=0.0.1
AC_SUBST(VERSION)

########################################################################
# Check --disable-corba option

GUI_DISABLE_CORBA="no"
DISABLE_PYCONSOLE="no"
DISABLE_GLVIEWER="no"
DISABLE_PLOT2DVIEWER="no"
DISABLE_SUPERVGRAPHVIEWER="no"
DISABLE_OCCVIEWER="no"
DISABLE_VTKVIEWER="no"
DISABLE_SALOMEOBJECT="no"

for option
do
  case $option in
      -disable-corba=yes | --disable-corba=yes | -disable-corba | --disable-corba)
          GUI_DISABLE_CORBA="yes";;
      -disable-pyConsole=yes | --disable-pyConsole=yes | -disable-pyConsole | --disable-pyConsole)
          DISABLE_PYCONSOLE="yes";;
      -disable-glViewer=yes | --disable-glViewer=yes | -disable-glViewer | --disable-glViewer)
          DISABLE_GLVIEWER="yes";;
      -disable-plot2dViewer=yes | --disable-plot2dViewer=yes | -disable-plot2dViewer | --disable-plot2dViewer)
          DISABLE_PLOT2DVIEWER="yes";;
      -disable-supervGraphViewer=yes | --disable-supervGraphViewer=yes | \
      -disable-supervGraphViewer | --disable-supervGraphViewer)
          DISABLE_SUPERVGRAPHVIEWER="yes";;
      -disable-occViewer=yes | --disable-occViewer=yes | -disable-occViewer | --disable-occViewer)
          DISABLE_OCCVIEWER="yes";;
      -disable-vtkViewer=yes | --disable-vtkViewer=yes | -disable-vtkViewer | --disable-vtkViewer)
          DISABLE_VTKVIEWER="yes";;
      -disable-salomeObject=yes | --disable-salomeObject=yes | -disable-salomeObject | --disable-salomeObject)
          DISABLE_SALOMEOBJECT="yes";;
  esac
done

dnl
dnl Initialize source and build root directories
dnl

ROOT_BUILDDIR=`pwd`
ROOT_SRCDIR=`echo $0 | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
cd $ROOT_SRCDIR
ROOT_SRCDIR=`pwd`
cd $ROOT_BUILDDIR

AC_SUBST(ROOT_SRCDIR)
AC_SUBST(ROOT_BUILDDIR)

echo
echo Source root directory : $ROOT_SRCDIR
echo Build  root directory : $ROOT_BUILDDIR
echo
echo

if test -z "$AR"; then
   AC_CHECK_PROGS(AR,ar xar,:,$PATH)
fi
AC_SUBST(AR)

dnl Export the AR macro so that it will be placed in the libtool file
dnl correctly.
export AR

echo
echo ---------------------------------------------
echo testing make
echo ---------------------------------------------
echo

AC_PROG_MAKE_SET
AC_PROG_INSTALL
dnl 
dnl libtool macro check for CC, LD, NM, LN_S, RANLIB, STRIP + pour les librairies dynamiques !

AC_ENABLE_DEBUG(yes)
AC_DISABLE_PRODUCTION

echo ---------------------------------------------
echo testing libtool
echo ---------------------------------------------

dnl first, we set static to no!
dnl if we want it, use --enable-static
AC_ENABLE_STATIC(no)

AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

dnl Fix up the INSTALL macro if it s a relative path. We want the
dnl full-path to the binary instead.
case "$INSTALL" in
   *install-sh*)
      INSTALL='\${KERNEL_ROOT_DIR}'/salome_adm/unix/config_files/install-sh
      ;;
esac

echo
echo ---------------------------------------------
echo testing C/C++
echo ---------------------------------------------
echo

cc_ok=no
dnl inutil car libtool
dnl AC_PROG_CC
AC_PROG_CXX
AC_CXX_WARNINGS
AC_CXX_TEMPLATE_OPTIONS
AC_DEPEND_FLAG
# AC_CC_WARNINGS([ansi])
cc_ok=yes

dnl Library libdl :
AC_CHECK_LIB(dl,dlopen)

dnl add library libm :
AC_CHECK_LIB(m,ceil)

dnl 
dnl Well we use sstream which is not in gcc pre-2.95.3
dnl We must test if it exists. If not, add it in include !
dnl

AC_CXX_HAVE_SSTREAM

dnl
dnl ---------------------------------------------
dnl testing MPICH
dnl ---------------------------------------------
dnl

CHECK_MPICH

echo
echo ---------------------------------------------
echo testing LEX \& YACC
echo ---------------------------------------------
echo

lex_yacc_ok=no
AC_PROG_YACC
AC_PROG_LEX
lex_yacc_ok=yes

echo
echo ---------------------------------------------
echo testing python
echo ---------------------------------------------
echo

CHECK_PYTHON

dnl echo
dnl echo ---------------------------------------------
dnl echo testing java
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_JAVA

echo
echo ---------------------------------------------
echo Testing Disable Corba
echo ---------------------------------------------
echo

CHECK_DISABLE_CORBA
echo "GUI_DISABLE_CORBA = "$GUI_DISABLE_CORBA

if test "x${GUI_DISABLE_CORBA}" != "xyes" ; then

echo
echo ---------------------------------------------
echo testing swig
echo ---------------------------------------------
echo

CHECK_SWIG
fi

echo
echo ---------------------------------------------
echo testing threads
echo ---------------------------------------------
echo

ENABLE_PTHREADS

if test "x${GUI_DISABLE_CORBA}" != "xyes" ; then
echo
echo ---------------------------------------------
echo testing omniORB
echo ---------------------------------------------
echo

CHECK_OMNIORB

dnl echo
dnl echo ---------------------------------------------
dnl echo testing mico
dnl echo ---------------------------------------------
dnl echo

dnl CHECK_MICO

echo
echo ---------------------------------------------
echo default ORB : omniORB
echo ---------------------------------------------
echo

DEFAULT_ORB=omniORB

echo
echo ---------------------------------------------
echo testing Corba
echo ---------------------------------------------
echo

CHECK_CORBA

AC_SUBST_FILE(CORBA)
corba=make_$ORB
CORBA=adm_local/unix/$corba

fi
echo
echo ---------------------------------------------
echo testing openGL
echo ---------------------------------------------
echo

CHECK_OPENGL

echo
echo ---------------------------------------------
echo testing QT
echo ---------------------------------------------
echo

CHECK_QT

echo
echo ---------------------------------------------
echo testing msg2qm
echo ---------------------------------------------
echo

CHECK_MSG2QM

echo
echo ---------------------------------------------
echo testing VTK
echo ---------------------------------------------
echo

CHECK_VTK

echo
echo ---------------------------------------------
echo testing HDF5
echo ---------------------------------------------
echo

CHECK_HDF5

echo
echo ---------------------------------------------
echo BOOST Library
echo ---------------------------------------------
echo

CHECK_BOOST

echo
echo ---------------------------------------------
echo Testing OpenCascade
echo ---------------------------------------------
echo

CHECK_CAS

echo
echo ---------------------------------------------
echo Testing sip
echo ---------------------------------------------
echo

CHECK_SIP

echo
echo ---------------------------------------------
echo Testing pyqt
echo ---------------------------------------------
echo

CHECK_PYQT

echo
echo ---------------------------------------------
echo Testing qwt
echo ---------------------------------------------
echo

CHECK_QWT 

echo
echo ---------------------------------------------
echo Testing PyConsole
echo ---------------------------------------------
echo

CHECK_PYCONSOLE
echo "DISABLE_PYCONSOLE = "$DISABLE_PYCONSOLE

echo
echo ---------------------------------------------
echo Testing GlViewer
echo ---------------------------------------------
echo

CHECK_GLVIEWER
echo "DISABLE_GLVIEWER = "$DISABLE_GLVIEWER

echo
echo ---------------------------------------------
echo Testing Plot2dViewer
echo ---------------------------------------------
echo

CHECK_PLOT2DVIEWER
echo "DISABLE_PLOT2DVIEWER = "$DISABLE_PLOT2DVIEWER

echo
echo ---------------------------------------------
echo Testing SupervGraphViewer
echo ---------------------------------------------
echo

CHECK_SUPERVGRAPHVIEWER
echo "DISABLE_SUPERVGRAPHVIEWER = "$DISABLE_SUPERVGRAPHVIEWER

echo
echo ---------------------------------------------
echo Testing OCCViewer
echo ---------------------------------------------
echo

CHECK_OCCVIEWER
echo "DISABLE_OCCVIEWER = "$DISABLE_OCCVIEWER

echo
echo ---------------------------------------------
echo Testing VTKViewer
echo ---------------------------------------------
echo

CHECK_VTKVIEWER
echo "DISABLE_VTKVIEWER = "$DISABLE_VTKVIEWER

echo
echo ---------------------------------------------
echo Testing SalomeObject
echo ---------------------------------------------
echo

CHECK_SALOMEOBJECT
echo "DISABLE_SALOMEOBJECT = "$DISABLE_SALOMEOBJECT

if test "x${GUI_DISABLE_CORBA}" != "xyes" ; then
  if test "x${DISABLE_PYCONSOLE}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable PyConsole !"
    exit
  fi
  if test "x${DISABLE_GLVIEWER}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable GlViewer !"
    exit
  fi
  if test "x${DISABLE_PLOT2DVIEWER}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable Plot2dViewer !"
    exit
  fi
  if test "x${DISABLE_SUPERVGRAPHVIEWER}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable SupervGraphViewer !"
    exit
  fi
  if test "x${DISABLE_OCCVIEWER}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable OCCViewer !"
    exit
  fi
  if test "x${DISABLE_VTKVIEWER}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable VTKViewer !"
    exit
  fi
  if test "x${DISABLE_SALOMEOBJECT}" == "xyes" ; then
    echo "failed : for full configuration of GUI module necessary enable SalomeObject !"
    exit
  fi
fi

echo
echo ---------------------------------------------
echo Testing html generators
echo ---------------------------------------------
echo 

CHECK_HTML_GENERATORS

if test "$GUI_DISABLE_CORBA" == "no"; then 
  echo
  echo ---------------------------------------------
  echo Testing Kernel
  echo ---------------------------------------------
  echo
  CHECK_KERNEL
fi

echo
echo ---------------------------------------------
echo Testing CPPUNIT only required for unit testing
echo ---------------------------------------------
echo

CHECK_CPPUNIT

echo
echo ---------------------------------------------
echo Summary
echo ---------------------------------------------
echo

if test "$GUI_DISABLE_CORBA" == "yes"; then 
   echo "Configure (without Corba)"
else
   echo Configure
fi


if test "$GUI_DISABLE_CORBA" != "yes"; then 
variables="cc_ok lex_yacc_ok python_ok swig_ok threads_ok OpenGL_ok qt_ok msg2qm_ok vtk_ok hdf5_ok omniORB_ok boost_ok occ_ok sip_ok pyqt_ok qwt_ok doxygen_ok graphviz_ok Kernel_ok"
else
variables="cc_ok lex_yacc_ok python_ok threads_ok OpenGL_ok qt_ok msg2qm_ok vtk_ok hdf5_ok boost_ok occ_ok sip_ok pyqt_ok qwt_ok doxygen_ok graphviz_ok Kernel_ok"
fi

for var in $variables
do
   printf "   %10s : " `echo \$var | sed -e "s,_ok,,"`
   eval echo \$$var
done

echo "---Optional:"
variables="cppunit_ok"
 
for var in $variables
do
   eval toto=\$$var
   if test x$toto != "x"; then
     printf "   %10s : " `echo \$var | sed -e "s,_ok,,"`
     eval echo \$$var
   fi
done

if test "$GUI_DISABLE_CORBA" != "yes"; then 
echo
echo "Default ORB   : $DEFAULT_ORB"
echo
fi
dnl generals files which could be included in every makefile

AC_SUBST_FILE(COMMENCE) COMMENCE=adm_local/unix/make_commence
AC_SUBST_FILE(CONCLUDE) CONCLUDE=adm_local/unix/make_conclude
AC_SUBST_FILE(MODULE) MODULE=salome_adm/unix/make_module

dnl les dependences
AC_SUBST_FILE(DEPEND) DEPEND=salome_adm/unix/depend

dnl We don t need to say when we re entering directories if we re using
dnl GNU make becuase make does it for us.
if test "X$GMAKE" = "Xyes"; then
   AC_SUBST(SETX) SETX=":"
else
   AC_SUBST(SETX) SETX="set -x"
fi

# make other build directories
if test "$GUI_DISABLE_CORBA" == "yes"; then 
dir_variables="salome_adm adm_local doc bin/salome include/salome lib/salome share/salome/resources idl"
else
dir_variables="salome_adm adm_local doc bin/salome include/salome lib/salome share/salome/resources"
fi

for rep in $dir_variables
do
#   if test ! -d $rep ; then
#      eval mkdir $rep
#   fi
    $INSTALL -d $rep
done

echo 
echo ---------------------------------------------
echo copying resource files, shell scripts, and 
echo xml files
echo ---------------------------------------------
echo


dnl copy resources directories

#for i in `find $ROOT_SRCDIR -name 'resources' -print`
#do
#  local_res=`echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#  local_res_dir=`echo $local_res | sed -e "s,[[^/]]*$,,;s,/$,,;s,^$,.,"`
#  mkdir -p $local_res_dir
#  cd $local_res_dir
#  ln -fs $i
#  echo $local_res
#  cd $ROOT_BUILDDIR
#done

dnl copy shells and utilities contained in the bin directory
dnl excluding .in files (treated in AC-OUTPUT below) and CVS 
dnl directory

mkdir -p bin/salome
cd bin/salome

for i in $ROOT_SRCDIR/bin/*
do
  local_bin=`echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
  case "$local_bin" in
        *.in | *~)                    ;;
        ./bin/CVS | ./bin/salome)                    ;;
        *) $INSTALL $i . ; echo $local_bin ;;
  esac
done
cd $ROOT_BUILDDIR

AC_SUBST_FILE(ENVSCRIPT) ENVSCRIPT=salome_adm/unix/envScript

dnl copy xml files to the build tree (lib directory)
dnl pourquoi ????

#cd lib
#for i in `find $ROOT_SRCDIR -name "*.xml" -print`
#do
#  ln -fs $i
#  echo `echo $i | sed -e "s,$ROOT_SRCDIR,.,"`
#done
#cd $ROOT_BUILDDIR


echo
echo ---------------------------------------------
echo generating Makefiles and configure files
echo ---------------------------------------------
echo

AC_OUTPUT_COMMANDS([ \
	chmod +x ./bin/* \
])

## do not delete this line
